version: 2.1
jobs:
  Build-Extension:
    # pre-built images: https://circleci.com/docs/2.0/circleci-images/
    docker:
      - image: circleci/node:latest
    steps:
      - run: mkdir -p /tmp/workspace
      - checkout   
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Installing extension dependencies
          command: |
            npm --prefix ./extension install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Building the extension
          command: |
             npm --prefix ./extension run build
      - run:
          name: Compress extension for storage
          command: zip -r /tmp/workspace/extension.zip ./extension/build
      - store_artifacts: # store this build output. Read more: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/workspace/extension.zip
          destination: extension
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: /tmp/workspace
          # Must be relative path from root
          paths:
            - extension.zip
  Build-App:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Installing app dependencies
          command: |
            npm --prefix ./client install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Building App
          command: |
            npm --prefix ./client run build
  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=0.1.2
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "Toonin Chrome extension. To use, unzip and enable developer tools in chrome -> load unpacked -> select unzipped build folder" -delete 0.1.2 /tmp/workspace/extension.zip
  deploy:
    machine:
        enabled: true
    working_directory: ~/circleci-demo-workflows
    environment:
      HEROKU_APP: "testtoonin"
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git subtree push --prefix herokuDeployment https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master
workflows:
  version: 2
  Validate_Build:
    jobs:
      # - Build-Extension
      # - Build-App
      # - publish-github-release:
      #     requires:
      #       - Build-Extension
      #     filters:
      #       branches:
      #         only: master
      - deploy:
          # requires:
          #   - Build-Extension
          #   - Build-App
          filters:
            branches:
              only: master
